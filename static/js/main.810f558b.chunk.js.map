{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactsList/ContactsListItem/ContactsListItem.module.css","Components/Filter/Filter.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","Components/Form/Form.js","Components/ContactsList/ContactsListItem/ContactsListItem.js","redux/contacts/contactsSelectors.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changedFilter","axios","defaults","baseURL","dispatch","a","get","data","contact","post","contactId","delete","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onCheckUnique","onSubmit","reset","validateFrom","className","styles","form","this","label","htmlFor","type","pattern","title","required","placeholder","onChange","id","button","Component","connect","contactsOperations","ContactsListItem","onRemove","item","onClick","getLoading","contacts","loading","getContacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getError","error","length","TransitionGroup","component","map","CSSTransition","timeout","classNames","filterLabel","App","handleCheckUniqueContact","check","find","alert","fetchContacts","in","appear","unmountOnExit","isLoading","color","height","width","message","contactsOperation","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.810f558b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1McpS\",\"button\":\"Form_button__5Yfol\",\"label\":\"Form_label__26H8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsListItem_button__1QMbh\",\"item\":\"ContactsListItem_item__36Zjk\",\"name\":\"ContactsListItem_name__17yzv\",\"item-fade-enter\":\"ContactsListItem_item-fade-enter__1ibQy\",\"item-fade-enter-active\":\"ContactsListItem_item-fade-enter-active__3QIgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2LJHg\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction(\r\n  'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\nexport const changedFilter = createAction('contacts/filterChanged');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst removeContact = contactId => async dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(removeContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  removeContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Form.module.css';\r\n\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.onCheckUnique(this.state.name)) {\r\n      this.reset();\r\n\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  validateFrom = () => {};\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label} htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispathcToProps)(Form);\r\n","import styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span>\r\n        <span className={styles.name}> {name} : </span>\r\n        <span className={styles.number}>{number}</span>\r\n      </span>\r\n\r\n      <button className={styles.button} onClick={() => onRemove(id)}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getError = state => state.contacts.error;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contactsSelectors';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './ContactListFade.css';\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map(contact => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames=\"item-fade\">\r\n            <ContactsListItem\r\n              key={contact.id}\r\n              {...contact}\r\n              onRemove={() => onRemove(contact.id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(contactsOperations.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport { changedFilter } from '../../redux/contacts/contactsAction';\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changedFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\nimport Loader from 'react-loader-spinner';\n\nimport contactsOperation from './redux/contacts/contactsOperations';\nimport {\n  getLoading,\n  getContacts,\n  getError,\n} from './redux/contacts/contactsSelectors';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles.css';\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.props;\n    const check = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert('Contact is already exist');\n      return check;\n    }\n  };\n\n  render() {\n    return (\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"scale\"\n        timeout={500}\n        unmountOnExit\n      >\n        <div className=\"app\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames=\"fade\"\n            timeout={2000}\n            unmountOnExit\n          >\n            <h1 className=\"title\">Phonebook</h1>\n          </CSSTransition>\n          <Form onCheckUnique={this.handleCheckUniqueContact} />\n\n          {this.props.contacts.length > 0 && <Filter />}\n          {this.props.isLoading && (\n            <Loader\n              className=\"loader\"\n              type=\"TailSpin\"\n              color=\"cornflowerblue\"\n              height={50}\n              width={50}\n            />\n          )}\n          {this.props.error && (\n            <p className=\"error-message\">{this.props.error.message}</p>\n          )}\n          <ContactsList />\n        </div>\n      </CSSTransition>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  isLoading: getLoading(state),\n  error: getError(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changedFilter,\r\n} from './contactsAction';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changedFilter]: (_, { payload }) => payload,\r\n});\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [removeContactError]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<h1>Loading...</h1>} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}